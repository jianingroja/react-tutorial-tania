{"version":3,"sources":["Form.js","Table-state.js","App-submit.js","index.js"],"names":["Form","initialState","name","job","state","handleChange","event","target","value","setState","submitForm","props","handleSubmit","this","htmlFor","type","id","onChange","onClick","Component","TableHeader","TableBody","rows","characterData","map","row","index","key","removeCharacter","TableState","AppSubmit","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"6OAkDeA,E,4MA/CbC,aAAe,CACbC,KAAM,GACNC,IAAK,I,EAGPC,MAAQ,EAAKH,a,EAEbI,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBL,EADgB,EAChBA,KAAMM,EADU,EACVA,MAEd,EAAKC,SAAL,eACGP,EAAOM,K,EAIZE,WAAa,WACX,EAAKC,MAAMC,aAAa,EAAKR,OAC7B,EAAKK,SAAS,EAAKR,e,uDAGX,IAAD,EACeY,KAAKT,MAAnBF,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,2BAAOW,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLb,KAAK,OACLc,GAAG,OACHR,MAAON,EACPe,SAAUJ,KAAKR,eAEjB,2BAAOS,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLb,KAAK,MACLc,GAAG,MACHR,MAAOL,EACPc,SAAUJ,KAAKR,eAEjB,2BAAOU,KAAK,SAASP,MAAM,SAASU,QAASL,KAAKH,kB,GA1CvCS,aCAbC,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,yCAMFC,EAAY,SAACV,GACjB,IAAMW,EAAOX,EAAMY,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIvB,MACT,4BAAKuB,EAAItB,KACT,4BACE,4BAAQe,QAAS,kBAAMP,EAAMiB,gBAAgBF,KAA7C,eAKR,OAAO,+BAAQJ,IAiBFO,EAdI,SAAClB,GAAW,IACrBY,EAAmCZ,EAAnCY,cAAeK,EAAoBjB,EAApBiB,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEL,cAAeA,EACfK,gBAAiBA,MCCVE,E,4MAjCb1B,MAAQ,CACN2B,WAAY,I,EAGdH,gBAAkB,SAACF,GAAW,IACpBK,EAAe,EAAK3B,MAApB2B,WAER,EAAKtB,SAAS,CACZsB,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMR,Q,EAKnBd,aAAe,SAACqB,GACd,EAAKxB,SAAS,CAAEsB,WAAW,GAAD,mBAAM,EAAK3B,MAAM2B,YAAjB,CAA6BE,O,uDAG/C,IACAF,EAAelB,KAAKT,MAApB2B,WAER,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CACEZ,cAAeQ,EACfH,gBAAiBf,KAAKe,kBAExB,kBAAC,EAAD,CAAMhB,aAAcC,KAAKD,oB,GA5BTO,a,MCExBiB,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,U","file":"static/js/main.a579f8b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initialState = {\n    name: \"\",\n    job: \"\",\n  };\n\n  state = this.initialState;\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n  return <tbody>{rows}</tbody>;\n};\n\nconst TableState = (props) => {\n  const { characterData, removeCharacter } = props;\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody\n        characterData={characterData}\n        removeCharacter={removeCharacter}\n      />\n    </table>\n  );\n};\n\nexport default TableState;\n","import React, { Component } from \"react\";\nimport Form from \"./Form.js\";\nimport TableState from \"./Table-state\";\n\nclass AppSubmit extends Component {\n  state = {\n    characters: [],\n  };\n\n  removeCharacter = (index) => {\n    const { characters } = this.state; //the only one in state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      }),\n    });\n  };\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n\n  render() {\n    const { characters } = this.state;\n\n    return (\n      <div className=\"container\">\n        <TableState\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default AppSubmit;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppSubmit from \"./App-submit\";\n\nimport \"./index.css\";\n\nReactDOM.render(<AppSubmit />, document.getElementById(\"root\"));\n"],"sourceRoot":""}